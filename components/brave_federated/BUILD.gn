import("//brave/build/config.gni")
import("//testing/test.gni")

static_library("brave_federated") {
  sources = [
    "brave_federated_service.cc",
    "brave_federated_service.h",
    "data_store_service.cc",
    "data_store_service.h",
    "data_stores/async_data_store.cc",
    "data_stores/async_data_store.h",
    "data_stores/data_store.cc",
    "data_stores/data_store.h",
    "communication_adapter.h",
    "communication_adapter.cc",
    "eligibility_service.cc",
    "eligibility_service.h",
    "eligibility_service_observer.h",
    "features.cc",
    "features.h",
    "learning_service.cc",
    "learning_service.h",
    "notification_ad_task_constants.h",
    "operational_patterns.cc",
    "operational_patterns.h",
    "operational_patterns_util.cc",
    "operational_patterns_util.h",
    "task/communication_helper.cc",
    "task/communication_helper.h",
    "task/task_runner.cc",
    "task/task_runner.h",
    "task/model.cc",
    "task/model.h",
    "util/linear_algebra_util.cc",
    "util/linear_algebra_util.h",
    "util/synthetic_dataset.cc",
    "util/synthetic_dataset.h",
  ]

  public_deps = [ "public/interfaces" ]

  deps = [
    "//brave/components/brave_stats/browser",
    "//brave/components/p3a:p3a",
    "//brave/components/version_info",
    "//brave/third_party/flower",
    "//components/keyed_service/core",
    "//components/metrics",
    "//components/prefs",
    "//services/network/public/cpp",
    "//services/network/public/mojom",
    "//sql",
    "//third_party/grpc:grpc++",
  ]
}

source_set("brave_federated_tests") {
  testonly = true

  sources = [
    "data_stores/data_store_unittest.cc",
    "features_unittest.cc",
    "operational_patterns_util_unittest.cc",
  ]

  deps = [
    "//base/test:test_support",
    "//brave/components/brave_federated:brave_federated",
    "//content/test:test_support",
    "//services/network:test_support",
    "//services/network/public/cpp",
    "//sql",
    "//sql:test_support",
    "//third_party/re2",
  ]
}
